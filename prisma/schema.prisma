// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Country {
  id          Int      @id @default(autoincrement())
  label       String   @unique
  code        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  towns       Town[]
}

model Town {
  id        Int      @id @default(autoincrement())
  label     String   @unique
  country   Country  @relation(fields: [countryId], references: [id])
  countryId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model User {
  id                   Int       @id @default(autoincrement())
  email                String    @unique
  name                 String
  surname              String?
  password             String
  telephone            String?   @unique
  address              String?
  logo                 String?
  description          String?
  otp                  String?
  resetPasswordOtp     String?
  resetPasswordExpires DateTime?
  role                 Role      @default(CLIENT)
  status               Boolean   @default(false)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @default(now()) @updatedAt
  services             Service[]
}

enum Role {
  ADMIN
  PROVIDER
  CLIENT
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  label       String    @unique
  image    String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  Product     Product[]
}

model ServiceCategory {
  id          Int       @id @default(autoincrement())
  label       String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  services    Service[]
}

model Shop {
  id             Int       @id @default(autoincrement())
  code           String
  name           String
  description    String
  location       String
  phoneNumber    String
  logo           String
  website        String?
  status         String
  services       Service[]
  socialNetworks Json
  images         Json
  Product        Product[]
}

model Service {
  id          Int             @id @default(autoincrement())
  label       String
  description String?
  time        Int
  amount      Int
  discount    Int?
  images      String?
  caretype    ServiceCategory @relation(fields: [categoryId], references: [id])
  categoryId  Int
  user        User            @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @default(now()) @updatedAt
  Shop        Shop?           @relation(fields: [shopId], references: [id])
  shopId      Int?
}

model Product {
  id                Int             @id @default(autoincrement())
  name              String
  quantity          Int
  price             Float
  discount          Float?
  images            Json
  description       String
  status            String
  shopId            Int
  shop              Shop            @relation(fields: [shopId], references: [id])
  productCategoryId Int
  productCategory   ProductCategory @relation(fields: [productCategoryId], references: [id])
}


model SubscriptionPlan{
  id            Int       @id @default(autoincrement())
  label         String    @unique
  price         Float
  duration      Int
  description   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
}